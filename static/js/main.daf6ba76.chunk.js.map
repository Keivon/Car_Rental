{"version":3,"sources":["components/J&J.js","components/Best-form.js","components/Bestcar.js","App.js","serviceWorker.js","index.js","images/Carousel1.jpg","images/Carousel2.jpg","images/Carousel3.jpg","images/Carousel4.jpg","images/Carousel5.jpg","images/Carousel6.jpg","images/J&J_2019.jpg"],"names":["makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","root","menuButton","title","Bestfrom","useForm","register","handleSubmit","errors","useState","Date","startDate","setStartDate","startDate2","setStartDate2","console","log","useEffect","name","onSubmit","data","className","type","placeholder","ref","required","maxLength","pattern","minLength","defaultValue","value","disabled","htmlFor","selected","onChange","date","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","size","TextField","id","multiline","rows","inputRef","label","margin","variant","error","message","helperText","Bestcar","CssBaseline","Container","maxWidth","useStyles","ul","li","listStyle","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","link","createMuiTheme","primary","grey","App","classes","ThemeProvider","AppBar","position","color","elevation","Toolbar","Typography","noWrap","Link","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.daf6ba76.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\n//import Button from '@material-ui/core/Button';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport Carousel from './Carousel.js'\nimport Banner from '../images/J&J_2019.jpg'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport default function Main() {\n  const classes = useStyles();\n\n  return (\n    <div className =\"App\" >\n     <img className = \"Banners\" src={Banner} alt=\"\"  />\n     <div className={classes.root}>\n     \n      <AppBar position=\"static\" style={{ background: '#FF33CC' }}>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n           \n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n           {/* <Button color=\"inherit\">Book</Button>\n            <Button color=\"inherit\">Gift</Button> */}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n      \n      <main>\n        {/* landing page */}\n        <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"md\">\n        <Carousel />\n      </Container>\n    </React.Fragment>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {cards.map(card => (\n              <Grid item key={card} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Heading\n                    </Typography>\n                    <Typography>\n                      This is a media card. You can use this section to describe the content.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                 { /*  <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                      Edit\n                    </Button> */}\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Something here \n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport DatePicker from \"react-datepicker\";\nimport \"../App.css\"\nimport TextField from '@material-ui/core/TextField';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nexport default function Bestfrom() {\n    const { register, handleSubmit, errors } = useForm();\n    const [startDate, setStartDate] = useState(new Date());\n    const [startDate2, setStartDate2] = useState(new Date());\n\n    const onSubmit = data => { console.log(data); console.log(startDate) };\n    console.log(errors);\n\n    useEffect(() => {\n        register({ name: \"reactSelect\" });\n    }, [register]);\n\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className=\"From-div\">\n            <div >\n                <div>\n                    <input type=\"text\" placeholder=\"First name\" name=\"First name\" ref={register({ required: true, maxLength: 80 })} />\n                    <input type=\"text\" placeholder=\"Last name\" name=\"Last name\" ref={register({ required: true, maxLength: 100 })} />\n                </div>\n                <div>\n                    <input type=\"text\" placeholder=\"Email\" name=\"Email\" ref={register({ required: true, pattern: /^\\S+@\\S+$/i })} />\n                    <input type=\"tel\" placeholder=\"Mobile number\" name=\"Mobile number\" ref={register({ required: true, minLength: 6, maxLength: 12 })} />\n                </div>\n                <div>\n                    <select name=\"Vehicle\" ref={register({ required: true })} defaultValue={'Compact'} >\n                    <option value=\"Compact\" disabled >Vehicle</option>\n                        <option value=\"Compact\">Compact</option>\n                        <option value=\"Mid-Size\">Mid-Size</option>\n                    </select>\n                </div>\n                <>\n                    <label htmlFor=\"Pickup\">Pickup Date and Time: </label>\n                </>\n                <div>\n                    <DatePicker\n                        selected={startDate}\n                        onChange={date => setStartDate(date)}\n                        showTimeSelect\n                        timeFormat=\"HH:mm\"\n                        timeIntervals={15}\n                        timeCaption=\"time\"\n                        dateFormat=\"MMMM d, yyyy h:mm aa\"\n                    />\n                </div>\n                <>\n                    <label htmlFor=\"Return\">Return Date and Time: </label>\n                </>\n                <div>\n                    <DatePicker\n                        selected={startDate2}\n                        onChange={date => setStartDate2(date)}\n                        showTimeSelect\n                        timeFormat=\"HH:mm\"\n                        timeIntervals={15}\n                        timeCaption=\"time\"\n                        dateFormat=\"MMMM d, yyyy h:mm aa\"\n                        size=\"40\"\n                    />\n                </div>\n\n                <>\n                    <TextField\n                        id=\"message\"\n                        multiline\n                        rows=\"4\"\n                        name=\"message\"\n                        inputRef={register}\n                        label=\"Message\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        error={errors.message ? true : false}\n                        helperText={errors.message ? errors.message.message : ''}\n                    />\n                </>\n\n\n\n            </div>\n            <input type=\"submit\" />\n        </form>\n    );\n}","import React from \"react\";\nimport \"../Bestcar.css\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport BestFrom from './Best-form.js'\n\n\n\n\n\n\nfunction Bestcar() {\n\n    \n    return (\n  \n\n        <div>\n            <CssBaseline />\n            <Container maxWidth=\"sm\" className=\"From-Best\">\n                <div className=\"From-B\">\n                    <BestFrom/>\n                </div>\n            </Container>\n        </div>\n        \n    );\n}\nexport default Bestcar;\n\n\n","import React from \"react\";\nimport JandJ from \"./components/J&J.js\"\nimport CarRental from \"./components/Bestcar.js\"\nimport \"./App.css\";\nimport Link from '@material-ui/core/Link';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\n\n\n\n// Styles for the Appbar\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n    },\n    li: {\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  }\n\n}));\n\n\n// Change the primary color\nconst theme = createMuiTheme({\n  palette: {\n      primary: grey,\n  },\n});\n\n//const companyName = [\"Best Choice Car Rental\"]\n\nfunction App() {\n\n  const classes = useStyles();\n\n  return (\n  \n    \n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n    <AppBar position=\"static\" color=\"primary\" elevation={0} className={classes.appBar}>\n    <Toolbar className={classes.toolbar}>\n      <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n        Company name\n      </Typography>\n      <nav>\n        <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link} >\n          Features\n        </Link>\n        <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\n          Enterprise\n        </Link>\n        <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\n          Support\n        </Link>\n      </nav>\n    </Toolbar>\n  </AppBar>\n  </ThemeProvider>\n\n\n      <CarRental />\n    </div>\n    \n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Carousel1.f442ea15.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Carousel2.27170f84.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Carousel3.542627bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Carousel4.ad6adf4a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Carousel5.e611fdb6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Carousel6.25ee3aca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/J&J_2019.77017a71.jpg\";"],"sourceRoot":""}